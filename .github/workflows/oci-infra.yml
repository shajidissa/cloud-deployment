name: "OCI Infra: Plan / Apply / Destroy (Managed MySQL Free)"

on:
  workflow_dispatch:
    inputs:
      action:
        description: "plan | apply | destroy"
        required: true
        default: "apply"

permissions:
  contents: read
  id-token: write

jobs:
  infra:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      # OCI auth (provided via repo secrets)
      OCI_CLI_USER:        ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY:     ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION:      ${{ secrets.OCI_CLI_REGION }}

    steps:
      - name: Sanity check (who am I)
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: "iam user get --user-id ${{ secrets.OCI_CLI_USER }}"
          silent: false

      - name: Sanity check (stack exists)
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: "resource-manager stack get --stack-id ${{ secrets.OCI_STACK_OCID }}"
          silent: false

      - name: Ensure MySQL admin password variable
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: >-
            resource-manager stack update
            --stack-id ${{ secrets.OCI_STACK_OCID }}
            --variables '{"mysql_admin_password":"${{ secrets.DB_PASSWORD }}"}'
            --wait-for-state SUCCEEDED
          silent: false

      # ---------- PLAN ----------
      - name: Plan
        if: inputs.action == 'plan'
        id: plan
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: >-
            resource-manager job create-plan-job
            --stack-id ${{ secrets.OCI_STACK_OCID }}
            --wait-for-state SUCCEEDED --wait-for-state FAILED
          query: "data.id"
          silent: false

      - name: Show plan logs
        if: inputs.action == 'plan'
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: "resource-manager job get-job-logs --job-id ${{ steps.plan.outputs.raw_output }}"
          silent: false

      # ---------- APPLY ----------
      - name: Apply (AUTO_APPROVED)
        if: inputs.action == 'apply'
        id: apply
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: >-
            resource-manager job create-apply-job
            --stack-id ${{ secrets.OCI_STACK_OCID }}
            --execution-plan-strategy AUTO_APPROVED
            --wait-for-state SUCCEEDED --wait-for-state FAILED
          query: "data.id"
          silent: false

      - name: Show apply logs
        if: inputs.action == 'apply'
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: "resource-manager job get-job-logs --job-id ${{ steps.apply.outputs.raw_output }}"
          silent: false

      # ---------- DESTROY ----------
      - name: Destroy
        if: inputs.action == 'destroy'
        id: destroy
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: >-
            resource-manager job create-destroy-job
            --stack-id ${{ secrets.OCI_STACK_OCID }}
            --wait-for-state SUCCEEDED --wait-for-state FAILED
          query: "data.id"
          silent: false

      - name: Show destroy logs
        if: inputs.action == 'destroy'
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: "resource-manager job get-job-logs --job-id ${{ steps.destroy.outputs.raw_output }}"
          silent: false