name: "OCI Infra: Plan / Apply / Destroy (Managed MySQL Free)"
on:
  workflow_dispatch:
    inputs:
      action:
        description: "plan | apply | destroy"
        required: true
        default: "plan"
permissions: { contents: read, id-token: write }
jobs:
  run:
    runs-on: ubuntu-latest
    env:
      STACK_ID: ${{ secrets.OCI_STACK_OCID }}
      OCI_CLI_USER:        ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY:     ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION:      ${{ secrets.OCI_CLI_REGION }}
      DB_PASSWORD:         ${{ secrets.DB_PASSWORD }}
    steps:
      - uses: oracle-actions/run-oci-cli-command@v1.3.2
        with: { command: "iam user get --user-id $OCI_CLI_USER" }
      - uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: >
            resource-manager stack update
            --stack-id "$STACK_ID"
            --variables '{"mysql_admin_password":"'"$DB_PASSWORD"'"}'
            --wait-for-state SUCCEEDED
      - if: inputs.action == 'plan'
        id: plan
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: >
            resource-manager job create-plan-job
            --stack-id "$STACK_ID"
            --wait-for-state SUCCEEDED --wait-for-state FAILED
          query: "data.id"
      - if: inputs.action == 'plan'
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: >
            resource-manager job get-job-logs
            --job-id ${{ steps.plan.outputs.raw_output }}
      - if: inputs.action == 'apply'
        id: apply
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: >
            resource-manager job create-apply-job
            --stack-id "$STACK_ID"
            --execution-plan-strategy AUTO_APPROVED
            --wait-for-state SUCCEEDED --wait-for-state FAILED
          query: "data.id"
      - if: inputs.action == 'apply'
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: >
            resource-manager job get-job-logs
            --job-id ${{ steps.apply.outputs.raw_output }}
      - if: inputs.action == 'destroy'
        id: destroy
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: >
            resource-manager job create-destroy-job
            --stack-id "$STACK_ID"
            --wait-for-state SUCCEEDED --wait-for-state FAILED
          query: "data.id"
      - if: inputs.action == 'destroy'
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        with:
          command: >
            resource-manager job get-job-logs
            --job-id ${{ steps.destroy.outputs.raw_output }}
